# Copyright 2021 The OpenSSL Project Authors. All Rights Reserved.
#
# Licensed under the Apache License 2.0 (the "License").  You may not use
# this file except in compliance with the License.  You can obtain a copy
# in the file LICENSE in the source distribution or at
# https://www.openssl.org/source/license.html 

# This file use samei build process of
# https://github.com/openssl/openssl/blob/master/.github/workflows/windows.yml
# with the addition the Check executable version step
name: 'Openssl Windows compiler action'
description: 'Compiles the openssl from https://github.com/openssl/openssl to use openssl.exe as built-in executable on softwares that depends of it functionalities'

inputs:
  version:
    description: "Choose a openssl version by github's tag"
    required: false
    default: 'openssl-3.0.7'
  prefix:
    description: 'The top of the installation directory tree'
    required: true
  openssldir:
    description: 'Directory for OpenSSL configuration files, and also the default certificate and key store.'
    required: true
  build-type:
    description: 'can be "shared", "plain" or "minimal"'
    required: true
  arch: 
    description: 'when build-type input is "shared", this can be "win64" or "win32"'
    required: false
    default: ''

outputs:
  built-openssl-path:
    description: 'path where the built openssl is located'
    value: ${{ steps.built-openssl-path.outputs.built-openssl-path }}

runs:
  using: 'composite'
  steps:

    - name: Install default MSVC 
      uses: ilammy/msvc-dev-cmd@v1
      if: ${{ inputs.build-type != 'shared' }}

    - name: Install MSVC for shared build-type
      uses: ilammy/msvc-dev-cmd@v1
      if: ${{ inputs.build-type == 'shared' }}
      with:
        arch: ${{ inputs.arch }}

    - name: Install NASM
      uses: ilammy/setup-nasm@v1
      if: ${{ inputs.build-type == 'shared' }}
      with:
        platform: ${{ inputs.arch }}
    
    - name: Setup Perl
      uses: shogo82148/actions-setup-perl@v1

    - name: Clone openssl
      shell: pwsh
      run: git clone https://github.com/openssl/openssl.git
    
    - name: Checkout openssl at specific tag
      shell: pwsh
      working-directory: openssl
      run: |
        git fetch --all --tags
        git checkout tags/${{ inputs.version }}

    - name: Prepare the build directory 
      shell: pwsh
      working-directory: openssl
      run: mkdir _build

    - name: Configure, build and test shared for win64
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'shared' && inputs.arch == 'win64' }}
      run: |
        perl ..\Configure --prefix=${{ inputs.prefix }} --openssldir=${{ inputs.openssldir }} --banner=Configured no-makedepend enable-fips enable-quic
        perl configdata.pm --dump
        nmake /S
        nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4
        nmake install

    - name: Configure, build and test shared for win32
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'shared' && inputs.arch == 'win32' }}
      run: |
        perl ..\Configure --prefix=${{ inputs.prefix }} --openssldir=${{ inputs.openssldir }} --banner=Configured no-makedepend --strict-warnings enable-fips enable-quic
        perl configdata.pm --dump
        nmake /S
        nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4
        nmake install DESTDIR=_tmp

    - name: Configure, build and test plain
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'plain' }}
      run: | 
        perl ..\Configure --prefix=${{ inputs.prefix }} --openssldir=${{ inputs.openssldir }} --banner=Configured no-makedepend no-shared no-fips VC-WIN64A-masm
        perl configdata.pm --dump
        nmake /S
        nmake test VERBOSE_FAILURE=yes HARNESS_JOBS=4
        nmake install

    - name: Configure, build and test minimal
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'minimal' }}
      run: |
        perl ..\Configure --prefix=${{ inputs.prefix }} --openssldir=${{ inputs.openssldir }} --banner=Configured no-makedepend no-bulk no-deprecated no-fips no-asm -DOPENSSL_SMALL_FOOTPRINT
        perl configdata.pm --dump
        nmake
        nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4
        nmake install
