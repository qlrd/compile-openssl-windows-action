# Copyright 2021 The OpenSSL Project Authors. All Rights Reserved.
#
# Licensed under the Apache License 2.0 (the "License").  You may not use
# this file except in compliance with the License.  You can obtain a copy
# in the file LICENSE in the source distribution or at
# https://www.openssl.org/source/license.html 

# This file use samei build process of
# https://github.com/openssl/openssl/blob/master/.github/workflows/windows.yml
# with the addition the Check executable version step
name: 'Openssl Windows compiler action'
description: 'Compiles the openssl from https://github.com/openssl/openssl to use openssl.exe as built-in executable on softwares that depends of it functionalities'

inputs:
  build-type:
    description: 'can be "plain" or "minimal"'
    required: true

outputs:
  openssl-version:
    description: 'version of built openssl.exe'
    value: ${{ steps.set-version.outputs.openssl-version }}
  openssl-path-dir:
    description: "built openssl.exe's path dir" 
    value: ${{ steps.set-path.outputs.openssl-path-dir }}

runs:
  using: 'composite'
  steps:

    - name: Install MSVC
      uses: ilammy/msvc-dev-cmd@v1
    
    - name: Setup Perl
      uses: shogo82148/actions-setup-perl@v1

    - name: Clone openssl
      shell: pwsh
      run: git clone https://github.com/openssl/openssl.git

    - name: Prepare the build directory 
      shell: pwsh
      working-directory: openssl
      run: mkdir _build
    
    - name: Config plain
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'plain' }}
      run: |
        perl ..\Configure --banner=Configured no-makedepend no-shared no-fips VC-WIN64A-masm
        perl configdata.pm --dump
    
    - name: Build plain
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'plain' }}
      run: nmake /S

    - name: Test plain
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'plain' }}
      run: nmake test VERBOSE_FAILURE=yes HARNESS_JOBS=4

    - name: Config minimal
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'minimal' }}
      run: |
        perl ..\Configure --banner=Configured no-makedepend no-bulk no-deprecated no-fips no-asm -DOPENSSL_SMALL_FOOTPRINT
        perl configdata.pm --dump

    - name: Build minimal
      shell: pwsh
      working-directory: openssl/_build 
      if: ${{ inputs.build-type == 'minimal' }}
      run: nmake

    - name: Test minimal
      shell: pwsh
      working-directory: openssl/_build
      if: ${{ inputs.build-type == 'minimal' }}
      run: nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4

    # How do I capture the output
    # into a variable from an external
    # process in PowerShell
    # SEE https://stackoverflow.com/questions/8097354/how-do-i-capture-the-output-into-a-variable-from-an-external-process-in-powershe
    - name: Set outputs
      id: set-outputs
      shell: pwsh
      working-directory: openssl/apps
      run: |
        $opensslExeVersion = openssl.exe version
        $opensslExePathDir = echo $env:GITHUB_WORKSPACE\openssl\apps
        echo "openssl-version=${opensslExeVersion}" >> $env:GITHUB_OUTPUT
        echo "openssl-path-dir=${opensslExePathDir}" >> $env:GITHUB_OUTPUT
