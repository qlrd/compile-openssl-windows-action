on: [push]

jobs:
  test:
    strategy:
      matrix:
        build-type:
          - plain
          - minimal
        os: 
          - windows-2019
          - windows-2022

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
     
      - name: Set a custom folder to install
        id: custom
        shell: pwsh
        run: |
          $loc = Get-Location
          echo "prefix=$loc\customSSL" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "openssldir=$loc\customSSL\CommonFiles" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Make folders to custom install
        shell: pwsh
        run: |
          mkdir ${{ steps.custom.outputs.prefix }}
          mkdir ${{ steps.custom.outputs.openssldir }}

      - name: Build openssl
        id: build
        uses: ./
        with:
          prefix: ${{ steps.custom.outputs.prefix }}
          openssldir: ${{ steps.custom.outputs.openssldir }}
          build-type: ${{ matrix.build-type }}

      - name: Check the existence of generated openssl.exe
        shell: pwsh
        run: ls ${{ steps.custom.outputs.prefix }}
      
      - name: Test functionality I (get version)
        shell: pwsh
        run: ${{ steps.custom.outputs.prefix }}\bin\openssl.exe version
      
      - name: Test functionality II (generate hex and base64 strings)
        shell: pwsh
        run: |
          ${{ steps.custom.outputs.prefix }}\bin\openssl.exe rand -hex 16
          ${{ steps.custom.outputs.prefix }}\bin\openssl.exe rand -base64 16
